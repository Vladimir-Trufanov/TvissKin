// Arduino C/C++                             *** WorkSet-Ralph-Heymsfeld.hh ***

// ****************************************************************************
// * ArduinoANNtve                   Искусственная нейронная сеть для Arduino *
// *                            http://robotics.hobbizine.com/arduinoann.html *
// *                                                                          *
// *     Тренировочные матрицы и параметры для обучения, которые обеспечивают *
// *      преобразование семи сегментов светодиодного цифрового дисплея (0-9) *
// *                                           в двоичное число (0000 - 1001).*
// *                                                                          *
// * v2.0, 11.12.2023            Авторы: Inteligencia Mil Grau, Труфанов В.Е. *
// * Copyright © 2022 tve        Дата создания:                    23.03.2012 *
// ****************************************************************************


const int PatternCount = 10;         // Количество шаблонов - количество обучающих элементов или строк в таблице истинности. 
const int InputNodes = 7;            // Входные узлы - количество входных нейронов. 
const int OutputNodes = 4;           // Выходные узлы - количество выходных нейронов.
const int HiddenNodes = 8;           // Скрытые узлы - количество скрытых нейронов. 

const float LearningRate = 0.3;      // Скорость обучения - параметр, который определяет, какая часть ошибки фактически передается обратно. 
const float Momentum = 0.9;          // Импульс - регулирует, насколько результаты предыдущей итерации влияют на текущую итерацию.
const float InitialWeightMax = 0.5;  // Начальный максимальный вес - устанавливает максимальные начальные значения для весов.
const float Success = 0.0004;        // Успех - конечное значение порога ошибки, при котором будет считаться, что сеть решила обучающий набор.

// Матрица входов
const byte Input[PatternCount][InputNodes]= 
{
  { 1, 1, 1, 1, 1, 1, 0 },  // 0
  { 0, 1, 1, 0, 0, 0, 0 },  // 1
  { 1, 1, 0, 1, 1, 0, 1 },  // 2
  { 1, 1, 1, 1, 0, 0, 1 },  // 3
  { 0, 1, 1, 0, 0, 1, 1 },  // 4
  { 1, 0, 1, 1, 0, 1, 1 },  // 5
  { 0, 0, 1, 1, 1, 1, 1 },  // 6
  { 1, 1, 1, 0, 0, 0, 0 },  // 7 
  { 1, 1, 1, 1, 1, 1, 1 },  // 8
  { 1, 1, 1, 0, 0, 1, 1 }   // 9
}; 

// Матрица выходов    
const byte Target[PatternCount][OutputNodes] = 
{
  { 0, 0, 0, 0 },  
  { 0, 0, 0, 1 }, 
  { 0, 0, 1, 0 }, 
  { 0, 0, 1, 1 }, 
  { 0, 1, 0, 0 }, 
  { 0, 1, 0, 1 }, 
  { 0, 1, 1, 0 }, 
  { 0, 1, 1, 1 }, 
  { 1, 0, 0, 0 }, 
  { 1, 0, 0, 1 } 
};

// ********************************************* WorkSet-Ralph-Heymsfeld.hh ***
